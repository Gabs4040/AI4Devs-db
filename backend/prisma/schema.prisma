datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int       @id @default(autoincrement())
  name      String
  employees Employee[]
  positions Position[]
}

model Employee {
  id         Int       @id @default(autoincrement())
  companyId  Int
  name       String
  email      String    @unique
  role       String
  isActive   Boolean    @default(true)
  company    Company    @relation(fields: [companyId], references: [id])
  interviews Interview[]
}

model Position {
  id                   Int             @id @default(autoincrement())
  companyId            Int
  interviewFlowId     Int
  title                String
  description          String?
  status               String
  isVisible            Boolean          @default(true)
  location             String?
  jobDescription       String?
  requirements         String?
  responsibilities      String?
  salaryMin            Float?
  salaryMax            Float?
  employmentType       String?
  benefits             String?
  companyDescription   String?
  applicationDeadline  DateTime?
  contactInfo          String?
  company              Company          @relation(fields: [companyId], references: [id])
  interviewFlow        InterviewFlow    @relation(fields: [interviewFlowId], references: [id])
  applications         Application[]
}

model InterviewFlow {
  id          Int             @id @default(autoincrement())
  description String
  steps       InterviewStep[]
  positions   Position[]
}

model InterviewStep {
  id                Int             @id @default(autoincrement())
  interviewFlowId   Int
  interviewTypeId   Int
  name              String
  orderIndex        Int
  interviewFlow     InterviewFlow    @relation(fields: [interviewFlowId], references: [id])
  interviewType     InterviewType    @relation(fields: [interviewTypeId], references: [id])
  interviews        Interview[]
}

model InterviewType {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  steps       InterviewStep[]
}

model Candidate {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  phone       String?
  address     String?
  applications Application[]
}

model Application {
  id              Int       @id @default(autoincrement())
  positionId      Int
  candidateId     Int
  applicationDate DateTime
  status          String
  notes           String?
  position        Position   @relation(fields: [positionId], references: [id])
  candidate       Candidate  @relation(fields: [candidateId], references: [id])
  interviews      Interview[]
}

model Interview {
  id                Int       @id @default(autoincrement())
  applicationId     Int
  interviewStepId   Int
  employeeId        Int
  interviewDate     DateTime
  result            String?
  score             Int?
  notes             String?
  application       Application   @relation(fields: [applicationId], references: [id])
  interviewStep     InterviewStep  @relation(fields: [interviewStepId], references: [id])
  employee          Employee       @relation(fields: [employeeId], references: [id])
}